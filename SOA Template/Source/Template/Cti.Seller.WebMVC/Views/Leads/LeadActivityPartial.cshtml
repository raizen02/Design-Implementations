@using ecrm.Infrastructure.Enum;
@model ecrm.Models.LeadsViewModels.LeadActivityViewModel



@if (ViewBag.Message != null)
{
    <div class="alert alert-success fade in" id="custom_prompt_message">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        @ViewBag.Message
    </div>
}

<div class="tab-pane active" id="tab_activity">   
@{
            AjaxOptions ajaxOptions = new AjaxOptions
            {
                UpdateTargetId = "addedit_tabcontent",
                OnBegin = "FAI_AjaxLoader('addedit_tabcontent', 'LeadList_Loader');ClearPromptMessage('tab_activity');",
                OnComplete = "FAI_AjaxLoaderRemove('addedit_tabcontent', 'LeadList_Loader')"
            };
}
@using (Ajax.BeginForm("LeadActivityView", new { leadID = Model.LeadID }, ajaxOptions))
{
    
    @Html.HiddenFor(model => model.LeadID, new { @id = "holder_leadid", @Value = Model.LeadID })
    @Html.HiddenFor(model => model.CurrentPageIndex, new { @id = "holder_pageno", @Value = Model.CurrentPageIndex })
    @Html.HiddenFor(model => model.SortBy, new { @id = "holder_sortby", @Value = Model.SortBy })
    @Html.HiddenFor(model => model.SortAscending, new { @id = "holder_sorascending", @Value = Model.SortAscending })
    @Html.HiddenFor(model => model.SearchFilter, new { @id = "holder_searchfilter", @Value = Model.SearchFilter })
    @Html.HiddenFor(model => model.LeadTask, new { @id = "holder_leadtask", @Value = Model.LeadTask })
    @Html.HiddenFor(model => model.PartialProject, new { @id = "holder_partialproject", @Value = Model.PartialProject })
    @Html.HiddenFor(model => model.NextStep, new { @id = "holder_nextstep", @Value = Model.NextStep })
    @Html.HiddenFor(model => model.ClientFeedback, new { @id = "holder_clientfeedback", @Value = Model.ClientFeedback })
        

    <input type="submit" id="initActivity" style="display: none;" />
}
    <div id="activity_list_container">
        <div class="form-group">
            <div class="box-body table-responsive no-padding" style="min-height:170px;">

                <div class="container-fluid" style="margin-top:10px;margin-bottom:10px;">
                    <div class="col-xs-6 col-sm-6 col-lg-6 btn-group no-margin pull-left">
                        @{
                            //SHOW ADD ACTIVITY FORM
                            AjaxOptions ajaxOptions_addactivity = new AjaxOptions
                            {
                                UpdateTargetId = "form_activity",
                                OnBegin = "FAI_AjaxLoader('form_activity', 'Activity_Loader')",
                                OnComplete = "FAI_AjaxLoaderRemove('form_activity', 'Activity_Loader');ClearPromptMessage('tab_activity');",
                                OnSuccess = "$('#form_activity').show();$('#activity_list_container').hide();"
                            };

                            using (Ajax.BeginForm("AddActivity", new { leadID = Model.LeadID }, ajaxOptions_addactivity))
                            {
                                @Html.HiddenFor(model => model.LeadID, Model.LeadID)
                                <button type="submit" id="btn_addactivity" class="btn btn-default" aria-label="Left Align">
                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>@Resources.AddActivity
                                </button>
                            }
                        }

                    </div>
                    <div class="col-xs-6 col-sm-6 col-lg-6 pull-right input-group">
                        <a class="input-group-addon">@Resources.Search</a>
                        <input id="activity_search_key" type="text" class="form-control"  onkeyup="ResetSearchValue();" aria-label="">
                        <div class="input-group-btn">
                            <button type="button" id="dropdown_activity_filter" filter='@LeadActivitySearchFilterFieldEnum.Activity' class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@Resources.Activity <span class="caret"></span></button>
                            <ul class="dropdown-menu dropdown-menu-right">
                                <li><a href="#" onclick="ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.Activity','@Resources.Activity');">@Resources.Activity</a></li>
                                <li><a href="#" onclick="ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.Project','@Resources.Project');">@Resources.Project</a></li>
                                <li><a href="#" onclick="ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.NextStep','@Resources.NextStep');">@Resources.NextStep</a></li>
                                <li><a href="#" onclick="ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.ClientFeedback','@Resources.ClientFeedBack');">@Resources.ClientFeedBack</a></li>
                            </ul>
                        </div><!-- /btn-group -->
                    </div>

                </div>

                <table id="leads_edit_table_activity" class="table table-hover tablesorter">
                    <thead>        
                        <tr>
                            <th class="not-header"></th>
                            <th class="faisorter-th" id="@LeadActivitySortFieldEnum.Activity" onclick="SortActivity('@LeadActivitySortFieldEnum.Activity')">
                                @Resources.Activity
                            </th>
                            <th class="faisorter-th" id="@LeadActivitySortFieldEnum.Project" onclick="SortActivity('@LeadActivitySortFieldEnum.Project')">
                                @Resources.Project
                            </th>
                            <th class="faisorter-th" id="@LeadActivitySortFieldEnum.ActivityDate" onclick="SortActivity('@LeadActivitySortFieldEnum.ActivityDate')">
                                @Resources.Activity_Date
                            </th>
                            <th class="faisorter-th" id="@LeadActivitySortFieldEnum.ClientFeedback" onclick="SortActivity('@LeadActivitySortFieldEnum.ClientFeedback')">
                                @Resources.ClientFeedBack
                            </th>
                            <th class="faisorter-th" id="@LeadActivitySortFieldEnum.NextStep" onclick="SortActivity('@LeadActivitySortFieldEnum.NextStep')">
                                @Resources.NextStep
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.LeadActivities)
                            {
                                <tr>
                                <td>
                                @{
                                    //EDIT ACTIVITY
                                    AjaxOptions ajaxOptions_editactivity = new AjaxOptions
                                    {
                                        UpdateTargetId = "form_activity",
                                        OnBegin = "FAI_AjaxLoader('form_activity', 'Activity_Loader')",
                                        OnComplete = "FAI_AjaxLoaderRemove('form_activity', 'Activity_Loader');ClearPromptMessage('tab_activity');",
                                        OnSuccess = "$('#form_activity').show();$('#activity_list_container').hide();",
                                    };

                                    using (Ajax.BeginForm("EditActivity", new { leadID = item.LeadID, activityID = item.ActivityID }, ajaxOptions_editactivity))
                                    {
                                    <button type="submit" id="btn_editactivity_activityid" class="glyphicon glyphicon-edit fai-table-buttons" aria-label="Left Align" style="border:none;background:transparent;"></button>
                                    }
                                }
                                </td>
                                <td>
                                @Html.DisplayFor(modelItem => item.LeadTaskString)
                                </td>
                                <td>
                                @Html.DisplayFor(modelItem => item.ActivityProjectName)
                                </td>
                                <td>
                                @Html.DisplayFor(modelItem => item.Activity_Date)
                                </td>
                                <td>
                                @Html.DisplayFor(modelItem => item.ClientFeedbackString)
                                </td>
                                <td>
                                @Html.DisplayFor(modelItem => item.NextStep)
                                </td>
                                </tr>
                            } 
                    </tbody>
                </table>
            </div>
            <hr>
        </div>


        @{
            int a, startpage;

            if (Model.CurrentPageIndex <= 6) { startpage = 1; }
            else { startpage = Model.CurrentPageIndex - 5; }
        }

        <div id="div_lead_pagination" class="box-footer clearfix">

            <ul class="pagination pagination-sm no-margin pull-right">
                @for (a = startpage; a < Model.PageCount + 1 && a < @Model.CurrentPageIndex + 6; a++)
                {
                    <li>
                        <a href="#" onclick="GotoPage(@a.ToString());">@a.ToString()</a>
                    </li>
                }
            </ul>

        </div>

    <div id="div_lead_pagination" class="box-footer clearfix">
        <h5 class="pull-right"><strong>Page @Model.CurrentPageIndex of @Model.PageCount</strong></h5>
    </div>


        </div>


        <div class="container-fluid" id="form_activity">

        </div>

    </div>
<script type="text/javascript">
    function ChangeActivityListSearchFiltering(key, value) {
        FAI_SetAttributeValue('dropdown_activity_filter', 'filter', key);
        FAI_SetInnerHTML('dropdown_activity_filter', value + ' <span class="caret"></span>');
        FAI_SetValue('holder_searchfilter', key);
        GetSearchText(key);
    }
    //HIDE THE FORM INITIALLY
    $('#form_activity').hide();

    //DETECT FILTER STATE AND SEARCH PARAMETER AT REFRESH
    var filter_state = FAI_GetValue('holder_searchfilter');
    
    function GetSearchText(filter_state) {
        if (filter_state == '0') {
            FAI_SetValue('activity_search_key', FAI_GetValue('holder_leadtask'));    
        }
        if (filter_state == '@LeadActivitySearchFilterFieldEnum.Activity') {
            FAI_SetValue('activity_search_key', FAI_GetValue('holder_leadtask'));   
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.Project') {
            FAI_SetValue('activity_search_key', FAI_GetValue('holder_partialproject'));         
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.NextStep') {
            FAI_SetValue('activity_search_key', FAI_GetValue('holder_nextstep'));       
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.ClientFeedback') {
            FAI_SetValue('activity_search_key', FAI_GetValue('holder_clientfeedback'));          
        }
    }

    function GetDropdown_State(filter_state) {
        if (filter_state == '0') {           
            ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.Activity', '@Resources.Activity');       
        }
        if (filter_state == '@LeadActivitySearchFilterFieldEnum.Activity') {          
            ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.Activity', '@Resources.Activity');           
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.Project') {         
            ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.Project', '@Resources.Project');           
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.NextStep') {          
            ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.NextStep', '@Resources.NextStep');           
        }
        else if (filter_state == '@LeadActivitySearchFilterFieldEnum.ClientFeedback') {           
            ChangeActivityListSearchFiltering('@LeadActivitySearchFilterFieldEnum.ClientFeedback', '@Resources.ClientFeedBack');         
        }
    }

    GetDropdown_State(filter_state);
    GetSearchText(filter_state);

    //SEARCH KEYPRESS ENTER
    FAI_KeyPressEnter('activity_search_key', 'initActivity');


    //ONCHANGE SEARCH TEXT BOX
    function ResetSearchValue() {
        var search_key = FAI_GetValue('activity_search_key');
        var filter_state = FAI_GetAttributeValue('dropdown_activity_filter', 'filter');
        switch (filter_state) {
            case '@LeadActivitySearchFilterFieldEnum.Activity':
                FAI_SetValue('holder_partialproject', '');
                FAI_SetValue('holder_nextstep', '');
                FAI_SetValue('holder_clientfeedback','');
                FAI_SetValue('holder_leadtask', search_key);
                break;
            case '@LeadActivitySearchFilterFieldEnum.Project':
                FAI_SetValue('holder_leadtask','');
                FAI_SetValue('holder_nextstep', '');
                FAI_SetValue('holder_clientfeedback', '');
                FAI_SetValue('holder_partialproject', search_key);
                break;
            case '@LeadActivitySearchFilterFieldEnum.NextStep':
                FAI_SetValue('holder_leadtask', '');
                FAI_SetValue('holder_partialproject', '');
                FAI_SetValue('holder_clientfeedback','');
                FAI_SetValue('holder_nextstep', search_key);
                break;
            case '@LeadActivitySearchFilterFieldEnum.ClientFeedback':
                FAI_SetValue('holder_leadtask', '');
                FAI_SetValue('holder_partialproject', '');
                FAI_SetValue('holder_nextstep','');
                FAI_SetValue('holder_clientfeedback', search_key);
                break;
        }

    }

    //GOTO SPECIFIC PAGE
    function GotoPage(pNo) {
        FAI_SetValue('holder_pageno', pNo);
        document.getElementById('initActivity').click();
    }

    //SORT LEADS
    function SortActivity(sortfield) {
        FAI_SetValue('holder_sortby', sortfield);
        if (document.getElementById('holder_sorascending').value == 'True') { FAI_SetValue('holder_sorascending', 'False'); }
        else { FAI_SetValue('holder_sorascending', 'True'); }
        document.getElementById('initActivity').click();
    }

    //FIX FOR BUG WHEN CURRENT PAGE IS GREATER THAN THE PAGE SIZE
    if (parseInt('@Model.CurrentPageIndex') > parseInt('@Model.PageCount')) {
        GotoPage(1);
    }

    //SCRIPT FOR CHANGING THE SORT ICON TO ASCENDING OR DESCENDING
    var sortby = FAI_GetValue('holder_sortby');
    var sorascending = FAI_GetValue('holder_sorascending');
    var asc_class = 'faisorter-th asc';
    if (sorascending == 'False') { asc_class = 'faisorter-th desc'; }
    if (sortby != 'ID') {
        document.getElementById(sortby).className = asc_class;
    }
</script>
