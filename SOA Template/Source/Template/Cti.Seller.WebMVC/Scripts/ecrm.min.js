function _init() { "use strict"; $.AdminLTE.layout = { activate: function () { var a = this; a.fix(), a.fixSidebar(), $(window, ".wrapper").resize(function () { a.fix(), a.fixSidebar() }) }, fix: function () { var a = $(".main-header").outerHeight() + $(".main-footer").outerHeight(), b = $(window).height(), c = $(".sidebar").height(); if ($("body").hasClass("fixed")) $(".content-wrapper, .right-side").css("min-height", b - $(".main-footer").outerHeight()); else { var d; b >= c ? ($(".content-wrapper, .right-side").css("min-height", b - a), d = b - a) : ($(".content-wrapper, .right-side").css("min-height", c), d = c); var e = $($.AdminLTE.options.controlSidebarOptions.selector); "undefined" != typeof e && e.height() > d && $(".content-wrapper, .right-side").css("min-height", e.height()) } }, fixSidebar: function () { return $("body").hasClass("fixed") ? ("undefined" == typeof $.fn.slimScroll && window.console && window.console.error("Error: the fixed layout requires the slimscroll plugin!"), void ($.AdminLTE.options.sidebarSlimScroll && "undefined" != typeof $.fn.slimScroll && ($(".sidebar").slimScroll({ destroy: !0 }).height("auto"), $(".sidebar").slimscroll({ height: $(window).height() - $(".main-header").height() + "px", color: "rgba(0,0,0,0.2)", size: "3px" })))) : void ("undefined" != typeof $.fn.slimScroll && $(".sidebar").slimScroll({ destroy: !0 }).height("auto")) } }, $.AdminLTE.pushMenu = { activate: function (a) { var b = $.AdminLTE.options.screenSizes; $(document).on("click", a, function (a) { a.preventDefault(), $(window).width() > b.sm - 1 ? $("body").hasClass("sidebar-collapse") ? $("body").removeClass("sidebar-collapse").trigger("expanded.pushMenu") : $("body").addClass("sidebar-collapse").trigger("collapsed.pushMenu") : $("body").hasClass("sidebar-open") ? $("body").removeClass("sidebar-open").removeClass("sidebar-collapse").trigger("collapsed.pushMenu") : $("body").addClass("sidebar-open").trigger("expanded.pushMenu") }), $(".content-wrapper").click(function () { $(window).width() <= b.sm - 1 && $("body").hasClass("sidebar-open") && $("body").removeClass("sidebar-open") }), ($.AdminLTE.options.sidebarExpandOnHover || $("body").hasClass("fixed") && $("body").hasClass("sidebar-mini")) && this.expandOnHover() }, expandOnHover: function () { var a = this, b = $.AdminLTE.options.screenSizes.sm - 1; $(".main-sidebar").hover(function () { $("body").hasClass("sidebar-mini") && $("body").hasClass("sidebar-collapse") && $(window).width() > b && a.expand() }, function () { $("body").hasClass("sidebar-mini") && $("body").hasClass("sidebar-expanded-on-hover") && $(window).width() > b && a.collapse() }) }, expand: function () { $("body").removeClass("sidebar-collapse").addClass("sidebar-expanded-on-hover") }, collapse: function () { $("body").hasClass("sidebar-expanded-on-hover") && $("body").removeClass("sidebar-expanded-on-hover").addClass("sidebar-collapse") } }, $.AdminLTE.tree = function (a) { var b = this, c = $.AdminLTE.options.animationSpeed; $(document).off("click", a + " li a").on("click", a + " li a", function (a) { var d = $(this), e = d.next(); if (e.is(".treeview-menu") && e.is(":visible") && !$("body").hasClass("sidebar-collapse")) e.slideUp(c, function () { e.removeClass("menu-open") }), e.parent("li").removeClass("active"); else if (e.is(".treeview-menu") && !e.is(":visible")) { var f = d.parents("ul").first(), g = f.find("ul:visible").slideUp(c); g.removeClass("menu-open"); var h = d.parent("li"); e.slideDown(c, function () { e.addClass("menu-open"), f.find("li.active").removeClass("active"), h.addClass("active"), b.layout.fix() }) } e.is(".treeview-menu") && a.preventDefault() }) }, $.AdminLTE.controlSidebar = { activate: function () { var a = this, b = $.AdminLTE.options.controlSidebarOptions, c = $(b.selector), d = $(b.toggleBtnSelector); d.on("click", function (d) { d.preventDefault(), c.hasClass("control-sidebar-open") || $("body").hasClass("control-sidebar-open") ? a.close(c, b.slide) : a.open(c, b.slide) }); var e = $(".control-sidebar-bg"); a._fix(e), $("body").hasClass("fixed") ? a._fixForFixed(c) : $(".content-wrapper, .right-side").height() < c.height() && a._fixForContent(c) }, open: function (a, b) { b ? a.addClass("control-sidebar-open") : $("body").addClass("control-sidebar-open") }, close: function (a, b) { b ? a.removeClass("control-sidebar-open") : $("body").removeClass("control-sidebar-open") }, _fix: function (a) { var b = this; if ($("body").hasClass("layout-boxed")) { if (a.css("position", "absolute"), a.height($(".wrapper").height()), b.hasBindedResize) return; $(window).resize(function () { b._fix(a) }), b.hasBindedResize = !0 } else a.css({ position: "fixed", height: "auto" }) }, _fixForFixed: function (a) { a.css({ position: "fixed", "max-height": "100%", overflow: "auto", "padding-bottom": "50px" }) }, _fixForContent: function (a) { $(".content-wrapper, .right-side").css("min-height", a.height()) } }, $.AdminLTE.boxWidget = { selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors, icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons, animationSpeed: $.AdminLTE.options.animationSpeed, activate: function (a) { var b = this; a || (a = document), $(a).on("click", b.selectors.collapse, function (a) { a.preventDefault(), b.collapse($(this)) }), $(a).on("click", b.selectors.remove, function (a) { a.preventDefault(), b.remove($(this)) }) }, collapse: function (a) { var b = this, c = a.parents(".box").first(), d = c.find("> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer"); c.hasClass("collapsed-box") ? (a.children(":first").removeClass(b.icons.open).addClass(b.icons.collapse), d.slideDown(b.animationSpeed, function () { c.removeClass("collapsed-box") })) : (a.children(":first").removeClass(b.icons.collapse).addClass(b.icons.open), d.slideUp(b.animationSpeed, function () { c.addClass("collapsed-box") })) }, remove: function (a) { var b = a.parents(".box").first(); b.slideUp(this.animationSpeed) } } } if ("undefined" == typeof jQuery) throw new Error("AdminLTE requires jQuery"); $.AdminLTE = {}, $.AdminLTE.options = { navbarMenuSlimscroll: !0, navbarMenuSlimscrollWidth: "3px", navbarMenuHeight: "200px", animationSpeed: 500, sidebarToggleSelector: "[data-toggle='offcanvas']", sidebarPushMenu: !0, sidebarSlimScroll: !0, sidebarExpandOnHover: !1, enableBoxRefresh: !0, enableBSToppltip: !0, BSTooltipSelector: "[data-toggle='tooltip']", enableFastclick: !1, enableControlSidebar: !0, controlSidebarOptions: { toggleBtnSelector: "[data-toggle='control-sidebar']", selector: ".control-sidebar", slide: !0 }, enableBoxWidget: !0, boxWidgetOptions: { boxWidgetIcons: { collapse: "fa-minus", open: "fa-plus", remove: "fa-times" }, boxWidgetSelectors: { remove: '[data-widget="remove"]', collapse: '[data-widget="collapse"]' } }, directChat: { enable: !0, contactToggleSelector: '[data-widget="chat-pane-toggle"]' }, colors: { lightBlue: "#3c8dbc", red: "#f56954", green: "#00a65a", aqua: "#00c0ef", yellow: "#f39c12", blue: "#0073b7", navy: "#001F3F", teal: "#39CCCC", olive: "#3D9970", lime: "#01FF70", orange: "#FF851B", fuchsia: "#F012BE", purple: "#8E24AA", maroon: "#D81B60", black: "#222222", gray: "#d2d6de" }, screenSizes: { xs: 480, sm: 768, md: 992, lg: 1200 } }, $(function () { "use strict"; $("body").removeClass("hold-transition"), "undefined" != typeof AdminLTEOptions && $.extend(!0, $.AdminLTE.options, AdminLTEOptions); var a = $.AdminLTE.options; _init(), $.AdminLTE.layout.activate(), $.AdminLTE.tree(".sidebar"), a.enableControlSidebar && $.AdminLTE.controlSidebar.activate(), a.navbarMenuSlimscroll && "undefined" != typeof $.fn.slimscroll && $(".navbar .menu").slimscroll({ height: a.navbarMenuHeight, alwaysVisible: !1, size: a.navbarMenuSlimscrollWidth }).css("width", "100%"), a.sidebarPushMenu && $.AdminLTE.pushMenu.activate(a.sidebarToggleSelector), a.enableBSToppltip && $("body").tooltip({ selector: a.BSTooltipSelector }), a.enableBoxWidget && $.AdminLTE.boxWidget.activate(), a.enableFastclick && "undefined" != typeof FastClick && FastClick.attach(document.body), a.directChat.enable && $(document).on("click", a.directChat.contactToggleSelector, function () { var a = $(this).parents(".direct-chat").first(); a.toggleClass("direct-chat-contacts-open") }), $('.btn-group[data-toggle="btn-toggle"]').each(function () { var a = $(this); $(this).find(".btn").on("click", function (b) { a.find(".btn.active").removeClass("active"), $(this).addClass("active"), b.preventDefault() }) }) }), function (a) { "use strict"; a.fn.boxRefresh = function (b) { function c(a) { a.append(f), e.onLoadStart.call(a) } function d(a) { a.find(f).remove(), e.onLoadDone.call(a) } var e = a.extend({ trigger: ".refresh-btn", source: "", onLoadStart: function (a) { return a }, onLoadDone: function (a) { return a } }, b), f = a('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>'); return this.each(function () { if ("" === e.source) return void (window.console && window.console.log("Please specify a source first - boxRefresh()")); var b = a(this), f = b.find(e.trigger).first(); f.on("click", function (a) { a.preventDefault(), c(b), b.find(".box-body").load(e.source, function () { d(b) }) }) }) } }(jQuery), function (a) { "use strict"; a.fn.activateBox = function () { a.AdminLTE.boxWidget.activate(this) }, a.fn.toggleBox = function () { var b = a(a.AdminLTE.boxWidget.selectors.collapse, this); a.AdminLTE.boxWidget.collapse(b) }, a.fn.removeBox = function () { var b = a(a.AdminLTE.boxWidget.selectors.remove, this); a.AdminLTE.boxWidget.remove(b) } }(jQuery), function (a) { "use strict"; a.fn.todolist = function (b) { var c = a.extend({ onCheck: function (a) { return a }, onUncheck: function (a) { return a } }, b); return this.each(function () { "undefined" != typeof a.fn.iCheck ? (a("input", this).on("ifChecked", function () { var b = a(this).parents("li").first(); b.toggleClass("done"), c.onCheck.call(b) }), a("input", this).on("ifUnchecked", function () { var b = a(this).parents("li").first(); b.toggleClass("done"), c.onUncheck.call(b) })) : a("input", this).on("change", function () { var b = a(this).parents("li").first(); b.toggleClass("done"), a("input", b).is(":checked") ? c.onCheck.call(b) : c.onUncheck.call(b) }) }) } }(jQuery);


var homeURL = window.location.protocol + "//" + window.location.host + "/";

function FAI_AjaxLoader(Elem,LoaderID) {
    setTimeout(function () {
        var cont = $('#' + Elem);
        modal = document.createElement('div');      
        modal.id = LoaderID;  
        cont.append(modal);
        modalcss = $("#"+LoaderID);
        modalcss.css({ position: 'absolute', left: 0, top: 0, width: '100%', height: '100%', background: '#000', opacity: 0.3, color: '#fff', 'font-weight': 400, 'z-index': 9 });
        document.getElementById(LoaderID).innerHTML = "<center><div class='fai-loader-image'><img src='" + homeURL + "images/ajax-loader.gif'/> Please Wait</div></center>";
        var loading = $(".fai-loader-image");
        var top = modalcss[0].offsetHeight/2;
        var left = Math.max($(window).width() / 2 - modalcss[0].offsetWidth / 2, 0);
        loading.css({ top: top, left: left, position: 'relative' });
       
    }, 200);
}

function FAI_AjaxLoaderRemove(Elem, LoaderID) {
    setTimeout(function () {
   
        var RElem = document.getElementById(Elem);
        var loader = document.getElementById(LoaderID);

        if ((RElem != null) && (loader != null)) {
            var garbage = RElem.removeChild(loader); 
        }
    }, 200);
}

function FAI_InitializeRequiredFields() {
    $('[data-val-required]').each(function () {
        var label = $('label[for="' + $(this).attr('id') + '"]');
        var text = label.text();
        if (text.length > 0) {
            label.append('<span class="required"></span>');
        }
    });
}

//METHOD POST
$("a[data-form-method='post']").click(function (event) {
    event.preventDefault();
    var element = $(this);
    var action = element.attr("href");
    element.closest("form").each(function () {
        var form = $(this);
        form.attr("action", action);
        form.submit();
    });
});




function FAI_SetValue(ID,Value) {
    document.getElementById(ID).value = Value;
}

function FAI_GetValue(ID) {
    return document.getElementById(ID).value;
}


function FAI_CheckAll(MainCheckBox, CheckBoxes) {
    checkbox_enroll = document.querySelectorAll(CheckBoxes);
    if (document.getElementById(MainCheckBox).checked == 1) {
        for (var i = 0, n = checkbox_enroll.length; i < n; i++) {
            checkbox_enroll[i].checked = true;     
        }
    }
    else {
        for (var i = 0, n = checkbox_enroll.length; i < n; i++) {
            checkbox_enroll[i].checked = false;    
        }
    }
}


function FAI_UnCheckSingle(MainCheckBox, CheckBoxes) {
    uncheckbox_enroll = document.querySelectorAll(CheckBoxes);
    checkall = 1;
    atleastOneChecked = 0;
    for (var i = 0, n = uncheckbox_enroll.length; i < n; i++) {
        if (uncheckbox_enroll[i].checked == 0) {
            checkall = 0;
        }
        else {
            atleastOneChecked = 1;
        }
    }
    if (checkall == 1) {
        document.getElementById(MainCheckBox).checked = true;
    }
    else {
        document.getElementById(MainCheckBox).checked = false;
    }      
}

function FAI_FindAtleastOneChecked(CheckBoxes) {
    uncheckbox_enroll = document.querySelectorAll(CheckBoxes); 
    atleastOneChecked = 0;
    for (var i = 0, n = uncheckbox_enroll.length; i < n; i++) {
        if (uncheckbox_enroll[i].checked == 0) {           
        }
        else {
            atleastOneChecked = 1;
        }
    }

    return atleastOneChecked;
}

function ClearPromptMessage(ElemID) {  
    var remove_custom_prompt = document.getElementById('custom_prompt_message');
    var element = document.getElementById(ElemID);
   
    if ((remove_custom_prompt != null) && (element != null)) {      
        element.parentNode.removeChild(remove_custom_prompt);
    }
   
}
function AppendPromptMessage(ElemID, PromptMessage) {
    var html = '<div class="alert alert-warning fade in" id="custom_prompt_message"> <a href="#" class="close" data-dismiss="alert">x</a><strong>' + PromptMessage + '</strong></div>';
    $('#' + ElemID).before(html);
}


function FAI_ValidateAtLeastOneLeadStatChecked(CheckBoxes,LeadStatus) {
    checkedbox_forconversion = document.querySelectorAll(CheckBoxes);
    atleastOneProspect = 0;
    for (var i = 0, n = checkedbox_forconversion.length; i < n; i++) {
        if ((checkedbox_forconversion[i].getAttribute('lead_status') == LeadStatus) && (checkedbox_forconversion[i].checked == 1)) {
            atleastOneProspect = 1; break;
        }
    }
    return atleastOneProspect;
}


function FAI_DisableLayer(Elem, LoaderID) {
    setTimeout(function () {
        var cont = $('#' + Elem);
        modal = document.createElement('div');
        modal.id = LoaderID;
        cont.append(modal);
        modalcss = $("#" + LoaderID);
        modalcss.css({ position: 'absolute', left: 0, top: 0, width: '100%', height: '100%', background: '#000', opacity: 0.3, color: '#fff', 'font-weight': 400, 'z-index': 1 });
        var top = modalcss[0].offsetHeight / 2;
        var left = Math.max($(window).width() / 2 - modalcss[0].offsetWidth / 2, 0);
        loading.css({ top: top, left: left, position: 'relative' });
    }, 200);
}

function AppendConfirmationMessage(ElemID, PrompMessage, SubmitButton) {
    var html = '<div class="alert alert-info fade in" id="custom_prompt_message"> <a href="#" class="close" data-dismiss="alert">x</a>';

    var html = html + '<strong>' + PrompMessage + '</strong> ';

    var html = html + '<button type="button" onclick="document.getElementById(\'' + SubmitButton + '\').click();" class="btn btn-default" aria-label="Left Align" style="width:90px;margin-right:10px;">';
    var html = html + '<span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Yes';
    var html = html + '</button>';

    var html = html + '<button type="button" class="btn btn-default" aria-label="Left Align" style="width:90px;" data-dismiss="alert">';
    var html = html + '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span> No';
    var html = html + '</button>';

    var html = html + '</div>';
    $('#' + ElemID).before(html);
}

function FAI_GetAttributeValue(ID, attribute) {    
    return document.getElementById(ID).getAttribute(attribute);
}

function FAI_SetAttributeValue(ID, attribute, value) {
    document.getElementById(ID).setAttribute(attribute, value);
}

function FAI_SetInnerHTML(ID, value) {   
    document.getElementById(ID).innerHTML = value;
}

function FAI_KeyPressEnter(inputID, btnID) {
    $("#" + inputID).bind('keypress', function (e) {
        var keyCode = e.keyCode || e.which;
        if (keyCode == 13) {
            $("#" + btnID).trigger('click');
            event.preventDefault();
        }
    });
}